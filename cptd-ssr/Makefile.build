# MODULES := <file1> <file2>
# RELEASE := <file1> ... <fileN>
# <mod>.pname := <physical path>
# <mod>.lname := <logical path> | empty
# COQLIBS := <mod>
MAKEFILE := Makefile.coq

.PHONY: coq clean

coq: $(MAKEFILE)
	make -f $(MAKEFILE)

SCRUB=
define scrub
$(if $(SCRUB),sed -e 's|\.opt||' $1 > $1.tmp; mv $1.tmp $1;)
endef

define print_flag
-I $($1.pname)$(if $($1.lname), -as $($1.lname)) 
endef

FILES := $(MODULES:%=%.v)
COQ_MK := coq_makefile
COQ_MK_FLAGS := $(FILES) COQC = "\$$(COQBIN)ssrcoq" COQLIBS = "$(foreach f,$(COQLIBS),$(call print_flag,$f)) -I ." COQFLAGS = "-q \$$(OPT) \$$(COQLIBS) -dont-load-proofs -compile"
# COQ_MK_FLAGS := -f Make
$(MAKEFILE): Makefile #$(FILES)
	$(COQ_MK) $(COQ_MK_FLAGS) -o $(MAKEFILE)
	$(call scrub,Makefile.coq)

clean:: $(MAKEFILE)
	make -f $(MAKEFILE) clean
	rm -f $(MAKEFILE)

%.vo: %.v
	$(MAKE) -f $(MAKEFILE) $@

release: $(TARGET_DIR)
	cp -i Makefile $(RELEASE) $(TARGET_DIR)
